<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutText" xml:space="preserve">
    <value>バージョン情報</value>
  </data>
  <data name="ConfigText" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="VisitText" xml:space="preserve">
    <value>プロジェクトサイトへ</value>
  </data>
  <data name="CloseText" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="HomeMessage" xml:space="preserve">
    <value>WebPに変換したい画像ファイルをドラッグ・アンド・ドロップしてください。
CTRL + Vでクリップボード内の画像を直接WebPに変換することもできます。</value>
  </data>
  <data name="BrowseFolderText" xml:space="preserve">
    <value>フォルダを選択...</value>
  </data>
  <data name="BrowseFolderTooltip" xml:space="preserve">
    <value>選択したフォルダ内の画像を一括変換します。</value>
  </data>
  <data name="QualityText" xml:space="preserve">
    <value>品質</value>
  </data>
  <data name="LosslessText" xml:space="preserve">
    <value>無劣化</value>
  </data>
  <data name="QualityTooltip" xml:space="preserve">
    <value>画像を不可逆圧縮するときの品質を指定します。
通常は、95を選択してください。</value>
  </data>
  <data name="LosslessTooltip" xml:space="preserve">
    <value>無劣化（可逆）圧縮をする場合はこのトグルをオンにしてください。</value>
  </data>
  <data name="KeepOriginalText" xml:space="preserve">
    <value>元画像を保持する</value>
  </data>
  <data name="KeepOriginalTooltip" xml:space="preserve">
    <value>変換前の画像を残す場合はこのトグルをオンにしてください。</value>
  </data>
  <data name="IgnoreJpegText" xml:space="preserve">
    <value>JPEG画像を無視する</value>
  </data>
  <data name="IgnoreJpegTooltip" xml:space="preserve">
    <value>JPEG画像は元々圧縮されているため、WebPで圧縮すると容量が逆に増えてしまう可能性があります。
このトグルをオンにすることでJPEGの圧縮処理をスキップすることができます。</value>
  </data>
  <data name="LanguageText" xml:space="preserve">
    <value>表示言語</value>
  </data>
  <data name="ConvertFromFileText" xml:space="preserve">
    <value>ファイルから変換...(_O)</value>
  </data>
  <data name="ConvertFromClipboardText" xml:space="preserve">
    <value>クリップボードから変換...(_V)</value>
  </data>
  <data name="ExitText" xml:space="preserve">
    <value>終了(_X)</value>
  </data>
  <data name="DialogOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="DialogCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="DialogConvertingText" xml:space="preserve">
    <value>WebPに変換しています...</value>
  </data>
  <data name="DialogInitializingText" xml:space="preserve">
    <value>初期化しています...</value>
  </data>
  <data name="DialogCompleteText" xml:space="preserve">
    <value>処理が完了しました。</value>
  </data>
  <data name="CompleteMessage" xml:space="preserve">
    <value>{0}件のファイルの変換が完了しました。</value>
  </data>
  <data name="NotifyCompleteText" xml:space="preserve">
    <value>完了時に通知を出す</value>
  </data>
  <data name="NotifyCompleteTooltip" xml:space="preserve">
    <value>処理完了時にデスクトップ通知を出します。</value>
  </data>
  <data name="ConvertingMessage" xml:space="preserve">
    <value>{0}を変換しています...</value>
  </data>
  <data name="CompleteMessageSingle" xml:space="preserve">
    <value>ファイルの変換が完了しました。</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>DropWebPについて</value>
  </data>
  <data name="FailureMessage" xml:space="preserve">
    <value>{1}件中{0}件のファイルの変換に失敗しました。</value>
  </data>
</root>